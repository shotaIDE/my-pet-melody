name: CD / iOS Production

on:
  push:
    tags:
      - "rc/*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Xcode
        uses: ./.github/actions/setup-xcode
      - name: Setup CocoaPods
        uses: ./.github/actions/setup-cocoapods
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
      - name: Set full version name from tag
        run: bundle exec fastlane set_full_version_name_from_latest_tag
      - name: Generate uncommitted Flutter files
        uses: ./.github/actions/generate-uncommitted-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
          firebase-options-dart-base64-prod: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_PROD }}
      - name: Generate uncommitted Flutter files for prod
        uses: ./.github/actions/generate-uncommitted-flutter-files-prod
        with:
          dart-defines-json-base64-prod: ${{ secrets.DART_DEFINES_JSON_BASE64_PROD }}
      - name: Generate uncommitted iOS files for prod
        run: echo "${{ secrets.GOOGLE_SERVICE_PLIST_BASE64_PROD }}" | base64 -d > ios/Runner/Firebase/Prod/GoogleService-Info.plist
      - name: Generate env file
        uses: ./.github/actions/generate-env-file
        with:
          env-base64: ${{ secrets.ENV_BASE64 }}
      - name: Generate App Store Connect API key file
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_P8_BASE64 }}" | base64 -d > fastlane/app-store-connect-api-key.p8
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@95e84a1a18f2bdbc5c6ab9b7f4429372e4b13a8b # v5
        with:
          p12-file-base64: ${{ secrets.APP_DISTRIBUTION_P12_BASE64 }}
          p12-password: ${{ secrets.APP_DISTRIBUTION_P12_PASSWORD }}
      - name: Import Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.PROVISIONING_PROFILE_PROD_APP_STORE_BASE64 }}" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/prod_app-store.mobileprovision
      - name: Build prod app
        run: bundle exec fastlane ios build_prod
      # Uploading to App Store may fail for temporary reasons, so we retry.
      - name: Deploy prod app to App Store
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 360
          max_attempts: 3
          retry_on: error
          command: bundle exec fastlane ios deploy_prod_without_build
